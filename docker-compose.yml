version: '3.7'

services:
  elasticsearch:
    image: localbuild/elasticsearch:${elk_version}
    build:
      context: elasticsearch/
      args:
         elk_version: ${elk_version}
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: ["CMD", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 30s
      retries: 5
    environment:
      ES_JAVA_OPTS: "-Xmx1024m -Xms1024m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - elk

  logstash:
    image: localbuild/logstash:${elk_version}
    build:
      context: logstash/
      args:
         elk_version: ${elk_version}
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "5999:5999"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    image: localbuild/kibana:${elk_version}
    build:
      context: kibana/
      args:
         elk_version: ${elk_version}
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    healthcheck:
      test: ["CMD", "curl --silent --fail localhost:5061/status || exit 1"]
      interval: 30s
      timeout: 30s
      retries: 5
    networks:
      - elk
    depends_on:
      - elasticsearch

  apm:
    image: localbuild/apm:${elk_version}
    build:
      context: apm/
      args:
        elk_version: ${elk_version}
    volumes:
    - type: bind
      source: ./apm/config/apm-server.docker.yml
      target: /usr/share/apm-server/apm-server.yml
      read_only: true
    ports:
    - "8200:8200"
    networks:
    - elk
    restart: on-failure
    depends_on:
      - elasticsearch
      - kibana
  
  metricbeat:
    image: localbuild/metricbeat:${elk_version}
    build:
      context: metricbeat/
      args:
          elk_version: ${elk_version}
    user: root # To read the docker socket
    command: metricbeat -e -strict.perms=false
    volumes:
      - type: bind
        source: ./metricbeat/config/metricbeat.docker.yml
        target: /usr/share/metricbeat/metricbeat.yml
        read_only: true
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
    networks:
      - elk
    restart: on-failure
    depends_on:
      - elasticsearch
      - kibana

  filebeat:
    image: localbuild/filebeat:${elk_version}
    build:
      context: filebeat/
      args:
        elk_version: ${elk_version}
    user: root # To read the docker socket
    command: filebeat -e -strict.perms=false
    volumes:
      - type: bind
        source: ./filebeat/config/filebeat.yml
        target: /usr/share/filebeat/filebeat.yml
        read_only: true
      - type: bind
        source: /var/lib/docker/containers
        target: /var/lib/docker/containers
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
      - type: volume
        source: filebeat
        target: /usr/share/filebeat/data
    networks:
    - elk
    restart: on-failure
    depends_on:
      - elasticsearch
      - kibana
  
  heartbeat:
    image : localbuild/heartbeat:${elk_version}
    build:
      context: heartbeat/
      args:
        elk_version: ${elk_version}
    volumes:
      - type: bind
        source: ./heartbeat/config/heartbeat.docker.yml
        target: /usr/share/heartbeat/heartbeat.yml
        read_only: true
    networks:
    - elk
    command: heartbeat -e --strict.perms=false 
    restart: on-failure
    depends_on:
    - elasticsearch
    - kibana

networks:
  elk:
    driver: bridge

volumes:
  elasticsearch:
  filebeat:
